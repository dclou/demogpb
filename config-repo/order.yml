info:
  version: 1.0.0
  component: микросервис "Управление заказами"
  
spring:
  data:
    rest:
      basePath: /api

logging:
  level.org.dclou.example.demogpb.order.clients: TRACE
  level.org.springframework.security: TRACE


management:
  security:
    enabled: false
  trace:
    include: request_headers,response_headers,cookies,authorization_header,errors,path_info,path_translated,context_path,user_principal,parameters,query_string,auth_type,remote_address,session_id,remote_user


server:
  context-path:
  port: 8083
  use-forward-headers: true

ribbon:
   # Interval to refresh the server list from the source
  serverListRefreshInterval: 1000

  # Max number of retries on the same server (excluding the first try)
  maxAutoRetries: 1

  # Max number of next servers to retry (excluding the first server)
  maxAutoRetriesNextServer: 1

  # Interval to refresh the server list from the source
  ServerListRefreshInterval: 1000

  # Max number of retries on the same server (excluding the first try)
  MaxAutoRetries: 1

  # Max number of next servers to retry (excluding the first server)
  MaxAutoRetriesNextServer: 1
  
  eureka:
    enabled: true

zuul:
  #Set of service names not to consider for proxying automatically. By default all services in the discovery client will be proxied.
  ignoredServices: '*'
  add-proxy-headers: true
  routes:
    auth:
      path: /auth/**
      serviceId: auth-service
      stripPrefix: false
      sensitive-headers:

security:
  enable-csrf: false
  sessions: IF_REQUIRED
  basic:
    enabled: false
  user:
    password: none
  oauth2:
#    sso:
#      loginPath: /login
    client:
     client-id: web-app
     clientSecret: mySecretKey
     #clientAuthenticationScheme: form
     accessTokenUri: http://auth-service/auth/oauth/token
     userAuthorizationUri: /auth/oauth/authorize
#     accessTokenUri: http://${spring.application.name}:${server.port}/auth/oauth/token
#     userAuthorizationUri: http://${spring.application.name}:${server.port}/auth/oauth/authorize
     #preEstablishedRedirectUri: http://${spring.application.name}:${server.port}/web-app/login
     #scope: read
     #registeredRedirectUri: http://${spring.application.name}:${server.port}/web-app/login
     #useCurrentUri: false

    resource:
      #userInfoUri: http://${spring.application.name}:${server.port}/auth/user
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAimUKhvBhsoeSM3HkIOP/Y3RXjvonBlZnLj8oO92TyAKG53lmAoK0wZ5MTZPsfrOz2Z7CeAp6mPhUANX2RUoFwVzG7rJmgWyqGmGFNBmtYL+uVqQ80TzWi5zyzXTxgVMWiCqqw/u4AeE1qhN8chnGwhUBnpgPAPd8v57mIwg0n5JxjdYe7pgHlpvt8ZXTXd1KBxB5K7WjNlCfMf75ZEeBaplxsSfJUwKbnHQKWcY3NnpjkVR8y4jviAbkOHmGMaliM7fcsLzbosBUPDQuNlvYdjPBRfH6MMPeXRW6On3u0Um9wIYmkQS+AEgHCq4UuLOnTTqqxnGkwFYeMAAXmRyMtQIDAQAB
          -----END PUBLIC KEY-----



#server:
#  port: 6161
#turbine:
#  stream:
#    port: 8989
#  appConfig: notification-service,event-service,profile-service
#  clusterNameExpression: new String("default")
#  combineHostPort: true
