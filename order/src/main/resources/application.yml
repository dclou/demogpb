logging:
  level.org.dclou.example.demogpb.order.clients: TRACE
  level.org.springframework.security: TRACE
spring:
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

  sleuth:
      sampler:
        percentage: 1

encrypt:
  failOnError: false
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
          enabled: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
      hostname: ${spring.application.name}
      metadataMap.instanceId: ${spring.application.name}:${random.value}
      prefer-ip-address: true
      lease-expiration-duration-in-seconds: 60
      lease-renewal-interval-in-seconds: 30


management:
  security:
    enabled: false
  trace:
    include: request_headers,response_headers,cookies,authorization_header,errors,path_info,path_translated,context_path,user_principal,parameters,query_string,auth_type,remote_address,session_id,remote_user


server:
  port: 8083

ribbon:
  eureka:
    enabled: true

#zuul:
#  routes:
#    auth-service:
#      path: /auth-service/**
#      sensitiveHeaders:

security:
  sessions: stateless
  user:
    password: none
  oauth2:
    client:
      client-id: web-app
      client-secret: mySecretKey
#      scope: read
#      accessTokenUri: http://localhost:9080/auth-service/auth/oauth/token
#      userAuthorizationUri: http://localhost:9080/auth-service/auth/oauth/authorize
#      preEstablishedRedirectUri: http://localhost:8083/
#      registeredRedirectUri: http://localhost:8083/
#      useCurrentUri: false

    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAimUKhvBhsoeSM3HkIOP/Y3RXjvonBlZnLj8oO92TyAKG53lmAoK0wZ5MTZPsfrOz2Z7CeAp6mPhUANX2RUoFwVzG7rJmgWyqGmGFNBmtYL+uVqQ80TzWi5zyzXTxgVMWiCqqw/u4AeE1qhN8chnGwhUBnpgPAPd8v57mIwg0n5JxjdYe7pgHlpvt8ZXTXd1KBxB5K7WjNlCfMf75ZEeBaplxsSfJUwKbnHQKWcY3NnpjkVR8y4jviAbkOHmGMaliM7fcsLzbosBUPDQuNlvYdjPBRfH6MMPeXRW6On3u0Um9wIYmkQS+AEgHCq4UuLOnTTqqxnGkwFYeMAAXmRyMtQIDAQAB
          -----END PUBLIC KEY-----

