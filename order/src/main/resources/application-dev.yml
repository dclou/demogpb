logging:
  level.org.dclou.example.demogpb.order.clients: DEBUG
  level.org.springframework.security: DEBUG

spring:
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  sleuth:
    sampler:
      percentage: 1

encrypt:
  failOnError: false

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
    hostname: ${spring.application.name}
    metadataMap.instanceId: ${spring.application.name}:${random.value}
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 60
    lease-renewal-interval-in-seconds: 30

management:
  security:
    enabled: false
  trace:
    include: request_headers,response_headers,cookies,authorization_header,errors,path_info,path_translated,context_path,user_principal,parameters,query_string,auth_type,remote_address,session_id,remote_user

server:
  port: 8083
  session:
    cookie:
      name: JSESSIONIDORDERSRV

ribbon:
  eureka:
    enabled: false

oauth2settings:
  client:
    id: order-service
    clientId: order-service
    clientSecret: 123456
    authenticationScheme: query
    clientAuthenticationScheme: header
    accessTokenUri: http://dripka.com:9991/oauth/token
    userAuthorizationUri: http://dripka.com:9991/oauth/authorize
    preEstablishedRedirectUri: http://dripka.com:8083/login/order
    registeredRedirectUri: http://dripka.com:8083/login/order
    useCurrentUri: false
  resource:
    userInfoUri: http://dripka.com:9991/api/user/principal.json
    preferTokenInfo: true